{"version":3,"file":"vue-upload-component.part.js","sources":["../src/utils/request.js","../src/chunk/ChunkUploadHandler.js","../src/InputFile.vue","../src/FileUpload.vue","../src/index.js"],"sourcesContent":["/**\n * Creates a XHR request\n *\n * @param {Object} options\n */\nexport const createRequest = (options) => {\n  const xhr = new XMLHttpRequest()\n  xhr.responseType = 'json'\n  xhr.open(options.method || 'GET', options.url)\n  if (options.headers) {\n    Object.keys(options.headers).forEach(key => {\n      xhr.setRequestHeader(key, options.headers[key])\n    })\n  }\n\n  return xhr\n}\n\n/**\n * Sends a XHR request with certain body\n *\n * @param {XMLHttpRequest} xhr\n * @param {Object} body\n */\nexport const sendRequest = (xhr, body) => {\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.response)\n      } else {\n        reject(xhr.response)\n      }\n    }\n    xhr.onerror = () => reject(xhr.response)\n    xhr.send(JSON.stringify(body))\n  })\n}\n\n/**\n * Sends a XHR request with certain form data\n *\n * @param {XMLHttpRequest} xhr\n * @param {Object} data\n */\nexport const sendFormRequest = (xhr, data) => {\n  const body = new FormData()\n  for (var name in data) {\n    body.append(name, data[name])\n  }\n\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.response)\n      } else {\n        reject(xhr.response)\n      }\n    }\n    xhr.onerror = () => reject(xhr.response)\n    xhr.send(body)\n  })\n}\n\n/**\n * Creates and sends XHR request\n *\n * @param {Object} options\n *\n * @returns Promise\n */\nexport default function (options) {\n  const xhr = createRequest(options)\n\n  return sendRequest(xhr, options.body)\n}\n","import {\n  default as request,\n  createRequest,\n  sendFormRequest\n} from '../utils/request'\n\nexport default class ChunkUploadHandler {\n  /**\n   * Constructor\n   *\n   * @param {File} file\n   * @param {Object} options\n   */\n  constructor (file, options) {\n    this.file = file\n    this.options = options\n  }\n\n  /**\n   * Gets the max retries from options\n   */\n  get maxRetries () {\n    return parseInt(this.options.maxRetries)\n  }\n\n  /**\n   * Gets the max number of active chunks being uploaded at once from options\n   */\n  get maxActiveChunks () {\n    return parseInt(this.options.maxActive)\n  }\n\n  /**\n   * Gets the file type\n   */\n  get fileType () {\n    return this.file.type\n  }\n\n  /**\n   * Gets the file size\n   */\n  get fileSize () {\n    return this.file.size\n  }\n\n  /**\n   * Gets action (url) to upload the file\n   */\n  get action () {\n    return this.options.action || null\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in start phase\n   */\n  get startBody () {\n    return this.options.startBody || {}\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in upload phase\n   */\n  get uploadBody () {\n    return this.options.uploadBody || {}\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in finish phase\n   */\n  get finishBody () {\n    return this.options.finishBody || {}\n  }\n\n  /**\n   * Gets the headers of the requests from options\n   */\n  get headers () {\n    return this.options.headers || {}\n  }\n\n  /**\n   * Whether it's ready to upload files or not\n   */\n  get readyToUpload () {\n    return !!this.chunks\n  }\n\n  /**\n   * Gets the progress of the chunk upload\n   * - Gets all the completed chunks\n   * - Gets the progress of all the chunks that are being uploaded\n   */\n  get progress () {\n    const completedProgress = (this.chunksUploaded.length / this.chunks.length) * 100\n    const uploadingProgress = this.chunksUploading.reduce((progress, chunk) => {\n      return progress + ((chunk.progress | 0) / this.chunks.length)\n    }, 0)\n\n    return Math.min(completedProgress + uploadingProgress, 100)\n  }\n\n  /**\n   * Gets all the chunks that are pending to be uploaded\n   */\n  get chunksToUpload () {\n    return this.chunks.filter(chunk => {\n      return !chunk.active && !chunk.uploaded\n    })\n  }\n\n  /**\n   * Whether there are chunks to upload or not\n   */\n  get hasChunksToUpload () {\n    return this.chunksToUpload.length > 0\n  }\n\n  /**\n   * Gets all the chunks that are uploading\n   */\n  get chunksUploading () {\n    return this.chunks.filter(chunk => {\n      return !!chunk.xhr && !!chunk.active\n    })\n  }\n\n  /**\n   * Gets all the chunks that have finished uploading\n   */\n  get chunksUploaded () {\n    return this.chunks.filter(chunk => {\n      return !!chunk.uploaded\n    })\n  }\n\n  /**\n   * Creates all the chunks in the initial state\n   */\n  createChunks () {\n    this.chunks = []\n\n    let start = 0\n    let end = this.chunkSize\n    while (start < this.fileSize) {\n      this.chunks.push({\n        blob: this.file.file.slice(start, end),\n        startOffset: start,\n        active: false,\n        retries: this.maxRetries\n      })\n      start = end\n      end = start + this.chunkSize\n    }\n  }\n\n  /**\n   * Updates the progress of the file with the handler's progress\n   */\n  updateFileProgress () {\n    this.file.progress = this.progress\n  }\n\n  /**\n   * Paues the upload process\n   * - Stops all active requests\n   * - Sets the file not active\n   */\n  pause () {\n    this.file.active = false\n    this.stopChunks()\n  }\n\n  /**\n   * Stops all the current chunks\n   */\n  stopChunks () {\n    this.chunksUploading.forEach(chunk => {\n      chunk.xhr.abort()\n      chunk.active = false\n    })\n  }\n\n  /**\n   * Resumes the file upload\n   * - Sets the file active\n   * - Starts the following chunks\n   */\n  resume () {\n    this.file.active = true\n    this.startChunking()\n  }\n\n  /**\n   * Starts the file upload\n   *\n   * @returns Promise\n   * - resolve  The file was uploaded\n   * - reject   The file upload failed\n   */\n  upload () {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve\n      this.reject = reject\n    })\n    this.start()\n\n    return this.promise\n  }\n\n  /**\n   * Start phase\n   * Sends a request to the backend to initialise the chunks\n   */\n  start () {\n    request({\n      method: 'POST',\n      headers: Object.assign({}, this.headers, {\n        'Content-Type': 'application/json'\n      }),\n      url: this.action,\n      body: Object.assign(this.startBody, {\n        phase: 'start',\n        mime_type: this.fileType,\n        size: this.fileSize\n      })\n    }).then(res => {\n      if (res.status !== 'success') {\n        this.file.response = res\n        return this.reject('server')\n      }\n\n      this.sessionId = res.data.session_id\n      this.chunkSize = res.data.end_offset\n\n      this.createChunks()\n      this.startChunking()\n    }).catch(res => {\n      this.file.response = res\n      this.reject('server')\n    })\n  }\n\n  /**\n   * Starts to upload chunks\n   */\n  startChunking () {\n    for (let i = 0; i < this.maxActiveChunks; i++) {\n      this.uploadNextChunk()\n    }\n  }\n\n  /**\n   * Uploads the next chunk\n   * - Won't do anything if the process is paused\n   * - Will start finish phase if there are no more chunks to upload\n   */\n  uploadNextChunk () {\n    if (this.file.active) {\n      if (this.hasChunksToUpload) {\n        return this.uploadChunk(this.chunksToUpload[0])\n      }\n\n      if (this.chunksUploading.length === 0) {\n        return this.finish()\n      }\n    }\n  }\n\n  /**\n   * Uploads a chunk\n   * - Sends the chunk to the backend\n   * - Sets the chunk as uploaded if everything went well\n   * - Decreases the number of retries if anything went wrong\n   * - Fails if there are no more retries\n   *\n   * @param {Object} chunk\n   */\n  uploadChunk (chunk) {\n    chunk.progress = 0\n    chunk.active = true\n    this.updateFileProgress()\n    chunk.xhr = createRequest({\n      method: 'POST',\n      headers: this.headers,\n      url: this.action\n    })\n\n    chunk.xhr.upload.addEventListener('progress', function (evt) {\n      if (evt.lengthComputable) {\n        chunk.progress = Math.round(evt.loaded / evt.total * 100)\n      }\n    }, false)\n\n    sendFormRequest(chunk.xhr, Object.assign(this.uploadBody, {\n      phase: 'upload',\n      session_id: this.sessionId,\n      start_offset: chunk.startOffset,\n      chunk: chunk.blob\n    })).then(res => {\n      chunk.active = false\n      if (res.status === 'success') {\n        chunk.uploaded = true\n      } else {\n        if (chunk.retries-- <= 0) {\n          this.stopChunks()\n          return this.reject('upload')\n        }\n      }\n\n      this.uploadNextChunk()\n    }).catch(() => {\n      chunk.active = false\n      if (chunk.retries-- <= 0) {\n        this.stopChunks()\n        return this.reject('upload')\n      }\n\n      this.uploadNextChunk()\n    })\n  }\n\n  /**\n   * Finish phase\n   * Sends a request to the backend to finish the process\n   */\n  finish () {\n    this.updateFileProgress()\n\n    request({\n      method: 'POST',\n      headers: Object.assign({}, this.headers, {\n        'Content-Type': 'application/json'\n      }),\n      url: this.action,\n      body: Object.assign(this.finishBody, {\n        phase: 'finish',\n        session_id: this.sessionId\n      })\n    }).then(res => {\n      this.file.response = res\n      if (res.status !== 'success') {\n        return this.reject('server')\n      }\n\n      this.resolve(res)\n    }).catch(res => {\n      this.file.response = res\n      this.reject('server')\n    })\n  }\n}\n","<template>\n  <input\n    type=\"file\"\n    :name=\"$parent.name\"\n    :id=\"$parent.inputId || $parent.name\"\n    :accept=\"$parent.accept\"\n    :capture=\"$parent.capture\"\n    @change=\"change\"\n    :webkitdirectory=\"$parent.directory && $parent.features.directory\"\n    :directory=\"$parent.directory && $parent.features.directory\"\n    :multiple=\"$parent.multiple && $parent.features.html5\"\n  />\n</template>\n<script>\nexport default {\n  methods: {\n    change(e) {\n      this.$destroy()\n      this.$parent.addInputFile(e.target)\n      // eslint-disable-next-line\n      new this.constructor({\n        parent: this.$parent,\n        el: this.$el,\n      })\n    }\n  }\n}\n</script>\n","<template>\n  <label :class=\"className\">\n    <slot></slot>\n    <input-file></input-file>\n  </label>\n</template>\n<style>\n.file-uploads {\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n  display: inline-block;\n}\n.file-uploads.file-uploads-html4 input[type=\"file\"] {\n  opacity: 0;\n  font-size: 20em;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.file-uploads.file-uploads-html5 input[type=\"file\"] {\n  overflow: hidden;\n  position: fixed;\n  width: 1px;\n  height: 1px;\n  z-index: -1;\n  opacity: 0;\n}\n</style>\n<script>\nimport ChunkUploadDefaultHandler from './chunk/ChunkUploadHandler'\nimport InputFile from './InputFile.vue'\n\nconst CHUNK_DEFAULT_OPTIONS = {\n  headers: {},\n  action: '',\n  minSize: 1048576,\n  maxActive: 3,\n  maxRetries: 5,\n\n  handler: ChunkUploadDefaultHandler\n}\n\nexport default {\n  components: {\n    InputFile,\n  },\n  props: {\n    inputId: {\n      type: String,\n    },\n\n    name: {\n      type: String,\n      default: 'file',\n    },\n\n    accept: {\n      type: String,\n    },\n\n    capture: {\n    },\n\n    multiple: {\n      type: Boolean,\n    },\n\n    maximum: {\n      type: Number,\n      default() {\n        return this.multiple ? 0 : 1\n      }\n    },\n\n    addIndex: {\n      type: [Boolean, Number],\n    },\n\n    directory: {\n      type: Boolean,\n    },\n\n    postAction: {\n      type: String,\n    },\n\n    putAction: {\n      type: String,\n    },\n\n    customAction: {\n      type: Function,\n    },\n\n    headers: {\n      type: Object,\n      default: Object,\n    },\n\n    data: {\n      type: Object,\n      default: Object,\n    },\n\n    timeout: {\n      type: Number,\n      default: 0,\n    },\n\n\n    drop: {\n      default: false,\n    },\n\n    dropDirectory: {\n      type: Boolean,\n      default: true,\n    },\n\n    size: {\n      type: Number,\n      default: 0,\n    },\n\n    extensions: {\n      default: Array,\n    },\n\n\n    value: {\n      type: Array,\n      default: Array,\n    },\n\n    thread: {\n      type: Number,\n      default: 1,\n    },\n\n    // Chunk upload enabled\n    chunkEnabled: {\n      type: Boolean,\n      default: false\n    },\n\n    // Chunk upload properties\n    chunk: {\n      type: Object,\n      default: () => {\n        return CHUNK_DEFAULT_OPTIONS\n      }\n    }\n  },\n\n  data() {\n    return {\n      files: this.value,\n      features: {\n        html5: true,\n        directory: false,\n        drag: false,\n      },\n\n      active: false,\n      dropActive: false,\n\n      uploading: 0,\n\n      destroy: false,\n    }\n  },\n\n\n  /**\n   * mounted\n   * @return {[type]} [description]\n   */\n  mounted() {\n    let input = document.createElement('input')\n    input.type = 'file'\n    input.multiple = true\n\n    // html5 特征\n    if (window.FormData && input.files) {\n      // 上传目录特征\n      if (typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean') {\n        this.features.directory = true\n      }\n\n      // 拖拽特征\n      if (this.features.html5 && typeof input.ondrop !== 'undefined') {\n        this.features.drop = true\n      }\n    } else {\n      this.features.html5 = false\n    }\n\n    // files 定位缓存\n    this.maps = {}\n\n    this.$nextTick(function () {\n\n      // 更新下父级\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n\n      // 拖拽渲染\n      this.watchDrop(this.drop)\n    })\n  },\n\n  /**\n   * beforeDestroy\n   * @return {[type]} [description]\n   */\n  beforeDestroy() {\n    // 已销毁\n    this.destroy = true\n\n    // 设置成不激活\n    this.active = false\n  },\n\n  computed: {\n    /**\n     * uploading 正在上传的线程\n     * @return {[type]} [description]\n     */\n\n    /**\n     * uploaded 文件列表是否全部已上传\n     * @return {[type]} [description]\n     */\n    uploaded() {\n      let file\n      for (let i = 0; i < this.files.length; i++) {\n        file = this.files[i]\n        if (file.fileObject && !file.error && !file.success) {\n          return false\n        }\n      }\n      return true\n    },\n\n    chunkOptions () {\n      return Object.assign(CHUNK_DEFAULT_OPTIONS, this.chunk)\n    },\n\n    className() {\n      return [\n        'file-uploads',\n        this.features.html5 ? 'file-uploads-html5' : 'file-uploads-html4',\n        this.features.directory && this.directory ? 'file-uploads-directory' : undefined,\n        this.features.drop && this.drop ? 'file-uploads-drop' : undefined,\n      ]\n    }\n  },\n\n\n  watch: {\n    active(active) {\n      this.watchActive(active)\n    },\n\n    dropActive() {\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n    },\n\n    drop(value) {\n      this.watchDrop(value)\n    },\n\n    value(files) {\n      if (this.files === files) {\n        return\n      }\n      this.files = files\n\n      let oldMaps = this.maps\n\n      // 重写 maps 缓存\n      this.maps = {}\n      for (let i = 0; i < this.files.length; i++) {\n        let file = this.files[i]\n        this.maps[file.id] = file\n      }\n\n      // add, update\n      for (let key in this.maps) {\n        let newFile = this.maps[key]\n        let oldFile = oldMaps[key]\n        if (newFile !== oldFile) {\n          this.emitFile(newFile, oldFile)\n        }\n      }\n\n      // delete\n      for (let key in oldMaps) {\n        if (!this.maps[key]) {\n          this.emitFile(undefined, oldMaps[key])\n        }\n      }\n    },\n  },\n\n  methods: {\n\n    // 清空\n    clear() {\n      if (this.files.length) {\n        let files = this.files\n        this.files = []\n\n        // 定位\n        this.maps = {}\n\n        // 事件\n        this.emitInput()\n        for (let i = 0; i < files.length; i++) {\n          this.emitFile(undefined, files[i])\n        }\n      }\n      return true\n    },\n\n    // 选择\n    get(id) {\n      if (!id) {\n        return false\n      }\n\n      if (typeof id === 'object') {\n        return this.maps[id.id] || false\n      }\n\n      return this.maps[id] || false\n    },\n\n    // 添加\n    add(_files, index = this.addIndex) {\n      let files = _files\n      let isArray = files instanceof Array\n\n      // 不是数组整理成数组\n      if (!isArray) {\n        files = [files]\n      }\n\n      // 遍历规范对象\n      let addFiles = []\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i]\n        if (this.features.html5 && file instanceof Blob) {\n          file = {\n            file,\n            size: file.size,\n            name: file.webkitRelativePath || file.relativePath || file.name || 'unknown',\n            type: file.type,\n          }\n        }\n        let fileObject = false\n        if (file.fileObject === false) {\n          // false\n        } else if (file.fileObject) {\n          fileObject = true\n        } else if (typeof Element !== 'undefined' && file.el instanceof Element) {\n          fileObject = true\n        } else if (typeof Blob !== 'undefined' && file.file instanceof Blob) {\n          fileObject = true\n        }\n        if (fileObject) {\n          file = {\n            fileObject: true,\n            size: -1,\n            name: 'Filename',\n            type: '',\n            active: false,\n            error: '',\n            success: false,\n            putAction: this.putAction,\n            postAction: this.postAction,\n            timeout: this.timeout,\n            ...file,\n            response: {},\n\n            progress: '0.00',          // 只读\n            speed: 0,                  // 只读\n            // xhr: false,                // 只读\n            // iframe: false,             // 只读\n          }\n\n          file.data = {\n            ...this.data,\n            ...file.data ? file.data : {},\n          }\n\n          file.headers = {\n            ...this.headers,\n            ...file.headers ? file.headers : {},\n          }\n        }\n\n        // 必须包含 id\n        if (!file.id) {\n          file.id = Math.random().toString(36).substr(2)\n        }\n\n        if (this.emitFilter(file, undefined)) {\n          continue\n        }\n\n        // 最大数量限制\n        if (this.maximum > 1 && (addFiles.length + this.files.length) >= this.maximum) {\n          break\n        }\n\n        addFiles.push(file)\n\n        // 最大数量限制\n        if (this.maximum === 1) {\n          break\n        }\n      }\n\n      // 没有文件\n      if (!addFiles.length) {\n        return false\n      }\n\n      // 如果是 1 清空\n      if (this.maximum === 1) {\n        this.clear()\n      }\n\n\n      // 添加进去 files\n      let newFiles\n      if (index === true || index === 0) {\n        newFiles = addFiles.concat(this.files)\n      } else if (index) {\n        newFiles = addFiles.concat([])\n        newFiles.splice(index, 0, addFiles)\n      } else {\n        newFiles = this.files.concat(addFiles)\n      }\n\n      this.files = newFiles\n\n      // 定位\n      for (let i = 0; i < addFiles.length; i++) {\n        let file = addFiles[i]\n        this.maps[file.id] = file\n      }\n\n      // 事件\n      this.emitInput()\n      for (let i = 0; i < addFiles.length; i++) {\n        this.emitFile(addFiles[i], undefined)\n      }\n\n      return isArray ? addFiles : addFiles[0]\n    },\n\n\n\n    // 添加表单文件\n    addInputFile(el) {\n      let files = []\n      if (el.files) {\n        for (let i = 0; i < el.files.length; i++) {\n          let file = el.files[i]\n          files.push({\n            size: file.size,\n            name: file.webkitRelativePath || file.relativePath || file.name,\n            type: file.type,\n            file,\n            el\n          })\n        }\n      } else {\n        files.push({\n          name: el.value.replace(/^.*?([^\\/\\\\\\r\\n]+)$/, '$1'),\n          el,\n        })\n      }\n      return this.add(files)\n    },\n\n\n    // 添加 DataTransfer\n    addDataTransfer(dataTransfer) {\n      let files = []\n      if (dataTransfer.items && dataTransfer.items.length) {\n        let items = []\n        for (let i = 0; i < dataTransfer.items.length; i++) {\n          let item = dataTransfer.items[i]\n          if (item.getAsEntry) {\n            item = item.getAsEntry() || item.getAsFile()\n          } else if (item.webkitGetAsEntry) {\n            item = item.webkitGetAsEntry() || item.getAsFile()\n          } else {\n            item = item.getAsFile()\n          }\n          if (item) {\n            items.push(item)\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          let forEach = (i) => {\n            let item = items[i]\n            // 结束 文件数量大于 最大数量\n            if (!item || (this.maximum > 0 && files.length >= this.maximum)) {\n              return resolve(this.add(files))\n            }\n            this.getEntry(item).then(function (results) {\n              files.push(...results)\n              forEach(i + 1)\n            })\n          }\n          forEach(0)\n        })\n      }\n\n      if (dataTransfer.files.length) {\n        for (let i = 0; i < dataTransfer.files.length; i++) {\n          files.push(dataTransfer.files[i])\n          if (this.maximum > 0 && files.length >= this.maximum) {\n            break\n          }\n        }\n        return Promise.resolve(this.add(files))\n      }\n\n      return Promise.resolve([])\n    },\n\n\n    // 获得 entry\n    getEntry(entry, path = '') {\n      return new Promise((resolve, reject) => {\n        if (entry.isFile) {\n          entry.file(function (file) {\n            resolve([\n              {\n                size: file.size,\n                name: path + file.name,\n                type: file.type,\n                file,\n              }\n            ])\n          })\n        } else if (entry.isDirectory && this.dropDirectory) {\n          let files = []\n          let dirReader = entry.createReader()\n          let readEntries = () => {\n            dirReader.readEntries((entries) => {\n              let forEach = (i) => {\n                if ((!entries[i] && i === 0) || (this.maximum > 0 && files.length >= this.maximum)) {\n                  return resolve(files)\n                }\n                if (!entries[i]) {\n                  return readEntries()\n                }\n                this.getEntry(entries[i], path + entry.name + '/').then((results) => {\n                  files.push(...results)\n                  forEach(i + 1)\n                })\n              }\n              forEach(0)\n            })\n          }\n          readEntries()\n        } else {\n          resolve([])\n        }\n      })\n    },\n\n\n    replace(id1, id2) {\n      let file1 = this.get(id1)\n      let file2 = this.get(id2)\n      if (!file1 || !file2 || file1 === file2) {\n        return false\n      }\n      let files = this.files.concat([])\n      let index1 = files.indexOf(file1)\n      let index2 = files.indexOf(file2)\n      if (index1 === -1 || index2 === -1) {\n        return false\n      }\n      files[index1] = file2\n      files[index2] = file1\n      this.files = files\n      this.emitInput()\n      return true\n    },\n\n    // 移除\n    remove(id) {\n      let file = this.get(id)\n      if (file) {\n        if (this.emitFilter(undefined, file)) {\n          return false\n        }\n        let files = this.files.concat([])\n        let index = files.indexOf(file)\n        if (index === -1) {\n          console.error('remove', file)\n          return false\n        }\n        files.splice(index, 1)\n        this.files = files\n\n        // 定位\n        delete this.maps[file.id]\n\n        // 事件\n        this.emitInput()\n        this.emitFile(undefined, file)\n      }\n      return file\n    },\n\n    // 更新\n    update(id, data) {\n      let file = this.get(id)\n      if (file) {\n        let newFile = {\n          ...file,\n          ...data\n        }\n        // 停用必须加上错误\n        if (file.fileObject && file.active && !newFile.active && !newFile.error && !newFile.success) {\n          newFile.error = 'abort'\n        }\n\n        if (this.emitFilter(newFile, file)) {\n          return false\n        }\n\n        let files = this.files.concat([])\n        let index = files.indexOf(file)\n        if (index === -1) {\n          console.error('update', file)\n          return false\n        }\n        files.splice(index, 1, newFile)\n        this.files = files\n\n        // 删除  旧定位 写入 新定位 （已便支持修改id)\n        delete this.maps[file.id]\n        this.maps[newFile.id] = newFile\n\n        // 事件\n        this.emitInput()\n        this.emitFile(newFile, file)\n        return newFile\n      }\n      return false\n    },\n\n\n\n    // 预处理 事件 过滤器\n    emitFilter(newFile, oldFile) {\n      let isPrevent = false\n      this.$emit('input-filter', newFile, oldFile, function () {\n        isPrevent = true\n        return isPrevent\n      })\n      return isPrevent\n    },\n\n    // 处理后 事件 分发\n    emitFile(newFile, oldFile) {\n      this.$emit('input-file', newFile, oldFile)\n      if (newFile && newFile.fileObject && newFile.active && (!oldFile || !oldFile.active)) {\n        this.uploading++\n        // 激活\n        this.$nextTick(function () {\n          setTimeout(() => {\n            this.upload(newFile).then(() => {\n              // eslint-disable-next-line\n              newFile = this.get(newFile)\n              if (newFile && newFile.fileObject) {\n                this.update(newFile, {\n                  active: false,\n                  success: !newFile.error\n                })\n              }\n            }).catch((e) => {\n              this.update(newFile, {\n                active: false,\n                success: false,\n                error: e.code || e.error || e.message || e\n              })\n            })\n          }, parseInt(Math.random() * 50 + 50, 10))\n        })\n      } else if ((!newFile || !newFile.fileObject || !newFile.active) && oldFile && oldFile.fileObject && oldFile.active) {\n        // 停止\n        this.uploading--\n      }\n\n      // 自动延续激活\n      if (this.active && (Boolean(newFile) !== Boolean(oldFile) || newFile.active !== oldFile.active)) {\n        this.watchActive(true)\n      }\n    },\n\n    emitInput() {\n      this.$emit('input', this.files)\n    },\n\n\n    // 上传\n    upload(id) {\n      let file = this.get(id)\n\n      // 被删除\n      if (!file) {\n        return Promise.reject('not_exists')\n      }\n\n      // 不是文件对象\n      if (!file.fileObject) {\n        return Promise.reject('file_object')\n      }\n\n      // 有错误直接响应\n      if (file.error) {\n        return Promise.reject(file.error)\n      }\n\n      // 已完成直接响应\n      if (file.success) {\n        return Promise.resolve(file)\n      }\n\n      // 后缀\n      let extensions = this.extensions\n      if (extensions && (extensions.length || typeof extensions.length === 'undefined')) {\n        if (typeof extensions !== 'object' || !(extensions instanceof RegExp)) {\n          if (typeof extensions === 'string') {\n            extensions = extensions.split(',').map(value => value.trim()).filter(value => value)\n          }\n          extensions = new RegExp('\\\\.(' + extensions.join('|').replace(/\\./g, '\\\\.') + ')$', 'i')\n        }\n        if (file.name.search(extensions) === -1) {\n          return Promise.reject('extension')\n        }\n      }\n\n      // 大小\n      if (this.size > 0 && file.size >= 0 && file.size > this.size) {\n        return Promise.reject('size')\n      }\n\n      if (this.customAction) {\n        return this.customAction(file, this)\n      }\n\n      if (this.features.html5) {\n        if (this.shouldUseChunkUpload(file)) {\n          return this.uploadChunk(file)\n        }\n        if (file.putAction) {\n          return this.uploadPut(file)\n        }\n        if (file.postAction) {\n          return this.uploadHtml5(file)\n        }\n      }\n      if (file.postAction) {\n        return this.uploadHtml4(file)\n      }\n      return Promise.reject('No action configured')\n    },\n\n    /**\n     * Whether this file should be uploaded using chunk upload or not\n     *\n     * @param Object file\n     */\n    shouldUseChunkUpload (file) {\n      return this.chunkEnabled &&\n        !!this.chunkOptions.handler &&\n        file.size > this.chunkOptions.minSize\n    },\n\n    /**\n     * Upload a file using Chunk method\n     *\n     * @param File file\n     */\n    uploadChunk (file) {\n      const HandlerClass = this.chunkOptions.handler\n      file.chunk = new HandlerClass(file, this.chunkOptions)\n\n      return file.chunk.upload()\n    },\n\n    uploadPut(file) {\n      let querys = []\n      let value\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value !== null && value !== undefined) {\n          querys.push(encodeURIComponent(key) + '=' + encodeURIComponent(value))\n        }\n      }\n      let queryString = querys.length ? (file.putAction.indexOf('?') === -1 ? '?' : '&') + querys.join('&') : ''\n      let xhr = new XMLHttpRequest()\n      xhr.open('PUT', file.putAction + queryString)\n      return this.uploadXhr(xhr, file, file.file)\n    },\n\n    uploadHtml5(file) {\n      let form = new window.FormData()\n      let value\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          if (value instanceof File) {\n            form.append(key, value, value.name)\n          } else {\n            form.append(key, JSON.stringify(value))\n          }\n        } else if (value !== null && value !== undefined) {\n          form.append(key, value)\n        }\n      }\n      form.append(this.name, file.file, file.file.filename || file.name)\n      let xhr = new XMLHttpRequest()\n      xhr.open('POST', file.postAction)\n      return this.uploadXhr(xhr, file, form)\n    },\n\n    uploadXhr(xhr, _file, body) {\n      let file = _file\n      let speedTime = 0\n      let speedLoaded = 0\n\n      // 进度条\n      xhr.upload.onprogress = (e) => {\n        // 还未开始上传 已删除 未激活\n        file = this.get(file)\n        if (!e.lengthComputable || !file || !file.fileObject || !file.active) {\n          return\n        }\n\n        // 进度 速度 每秒更新一次\n        let speedTime2 = Math.round(Date.now() / 1000)\n        if (speedTime2 === speedTime) {\n          return\n        }\n        speedTime = speedTime2\n\n        file = this.update(file, {\n          progress: (e.loaded / e.total * 100).toFixed(2),\n          speed: e.loaded - speedLoaded,\n        })\n        speedLoaded = e.loaded\n      }\n\n      // 检查激活状态\n      let interval = setInterval(() => {\n        file = this.get(file)\n        if (file && file.fileObject && !file.success && !file.error && file.active) {\n          return\n        }\n\n        if (interval) {\n          clearInterval(interval)\n          interval = false\n        }\n\n        try {\n          xhr.abort()\n          xhr.timeout = 1\n        } catch (e) {\n        }\n      }, 100)\n\n      return new Promise((resolve, reject) => {\n        let complete\n        let fn = (e) => {\n          // 已经处理过了\n          if (complete) {\n            return\n          }\n          complete = true\n          if (interval) {\n            clearInterval(interval)\n            interval = false\n          }\n\n          file = this.get(file)\n\n          // 不存在直接响应\n          if (!file) {\n            return reject('not_exists')\n          }\n\n          // 不是文件对象\n          if (!file.fileObject) {\n            return reject('file_object')\n          }\n\n          // 有错误自动响应\n          if (file.error) {\n            return reject(file.error)\n          }\n\n          // 未激活\n          if (!file.active) {\n            return reject('abort')\n          }\n\n\n          // 已完成 直接相应\n          if (file.success) {\n            return resolve(file)\n          }\n\n          let data = {}\n\n          switch (e.type) {\n            case 'timeout':\n            case 'abort':\n              data.error = e.type\n              break\n            case 'error':\n              if (!xhr.status) {\n                data.error = 'network'\n              } else if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              }\n              break\n            default:\n              if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              } else {\n                data.progress = '100.00'\n              }\n          }\n\n          if (xhr.responseText) {\n            let contentType = xhr.getResponseHeader('Content-Type')\n            if (contentType && contentType.indexOf('/json') !== -1) {\n              data.response = JSON.parse(xhr.responseText)\n            } else {\n              data.response = xhr.responseText\n            }\n          }\n\n          // 更新\n          file = this.update(file, data)\n\n          // 相应错误\n          if (file.error) {\n            return reject(file.error)\n          }\n\n          // 响应\n          return resolve(file)\n        }\n\n        // 事件\n        xhr.onload = fn\n        xhr.onerror = fn\n        xhr.onabort = fn\n        xhr.ontimeout = fn\n\n        // 超时\n        if (file.timeout) {\n          xhr.timeout = file.timeout\n        }\n\n        // headers\n        for (let key in file.headers) {\n          xhr.setRequestHeader(key, file.headers[key])\n        }\n\n        // 更新 xhr\n        file = this.update(file, { xhr })\n\n        // 开始上传\n        xhr.send(body)\n      })\n    },\n\n\n\n\n    uploadHtml4(_file) {\n      let file = _file\n      let onKeydown = function (e) {\n        if (e.keyCode === 27) {\n          e.preventDefault()\n        }\n      }\n\n      let iframe = document.createElement('iframe')\n      iframe.id = 'upload-iframe-' + file.id\n      iframe.name = 'upload-iframe-' + file.id\n      iframe.src = 'about:blank'\n      iframe.setAttribute('style', 'width:1px;height:1px;top:-999em;position:absolute; margin-top:-999em;')\n\n\n      let form = document.createElement('form')\n\n      form.action = file.postAction\n\n      form.name = 'upload-form-' + file.id\n\n\n      form.setAttribute('method', 'POST')\n      form.setAttribute('target', 'upload-iframe-' + file.id)\n      form.setAttribute('enctype', 'multipart/form-data')\n\n      let value\n      let input\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          value = JSON.stringify(value)\n        }\n        if (value !== null && value !== undefined) {\n          input = document.createElement('input')\n          input.type = 'hidden'\n          input.name = key\n          input.value = value\n          form.appendChild(input)\n        }\n      }\n      form.appendChild(file.el)\n\n      document.body.appendChild(iframe).appendChild(form)\n\n\n\n\n      let getResponseData = function () {\n        let doc\n        try {\n          if (iframe.contentWindow) {\n            doc = iframe.contentWindow.document\n          }\n        } catch (err) {\n        }\n        if (!doc) {\n          try {\n            doc = iframe.contentDocument ? iframe.contentDocument : iframe.document\n          } catch (err) {\n            doc = iframe.document\n          }\n        }\n        if (doc && doc.body) {\n          return doc.body.innerHTML\n        }\n        return null\n      }\n\n\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          file = this.update(file, { iframe })\n\n          // 不存在\n          if (!file) {\n            return reject('not_exists')\n          }\n\n          // 定时检查\n          let interval = setInterval(() => {\n            file = this.get(file)\n            if (file && file.fileObject && !file.success && !file.error && file.active) {\n              return\n            }\n\n            if (interval) {\n              clearInterval(interval)\n              interval = false\n            }\n\n            iframe.onabort({ type: file ? 'abort' : 'not_exists' })\n          }, 100)\n\n\n          let complete\n          let fn = (e) => {\n            // 已经处理过了\n            if (complete) {\n              return\n            }\n            complete = true\n\n\n            if (interval) {\n              clearInterval(interval)\n              interval = false\n            }\n\n            // 关闭 esc 事件\n            document.body.removeEventListener('keydown', onKeydown)\n\n            file = this.get(file)\n\n            // 不存在直接响应\n            if (!file) {\n              return reject('not_exists')\n            }\n\n            // 不是文件对象\n            if (!file.fileObject) {\n              return reject('file_object')\n            }\n\n            // 有错误自动响应\n            if (file.error) {\n              return reject(file.error)\n            }\n\n            // 未激活\n            if (!file.active) {\n              return reject('abort')\n            }\n\n            // 已完成 直接相应\n            if (file.success) {\n              return resolve(file)\n            }\n\n            let response = getResponseData()\n            let data = {}\n            switch (e.type) {\n              case 'abort':\n                data.error = 'abort'\n                break\n              case 'error':\n                if (file.error) {\n                  data.error = file.error\n                } else if (response === null) {\n                  data.error = 'network'\n                } else {\n                  data.error = 'denied'\n                }\n                break\n              default:\n                if (file.error) {\n                  data.error = file.error\n                } else if (data === null) {\n                  data.error = 'network'\n                } else {\n                  data.progress = '100.00'\n                }\n            }\n\n            if (response !== null) {\n              if (response && response.substr(0, 1) === '{' && response.substr(response.length - 1, 1) === '}') {\n                try {\n                  response = JSON.parse(response)\n                } catch (err) {\n                }\n              }\n              data.response = response\n            }\n\n            // 更新\n            file = this.update(file, data)\n\n            if (file.error) {\n              return reject(file.error)\n            }\n\n            // 响应\n            return resolve(file)\n          }\n\n\n          // 添加事件\n          iframe.onload = fn\n          iframe.onerror = fn\n          iframe.onabort = fn\n\n\n          // 禁止 esc 键\n          document.body.addEventListener('keydown', onKeydown)\n\n          // 提交\n          form.submit()\n        }, 50)\n      }).then(function (res) {\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\n        return res\n      }).catch(function (res) {\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\n        return res\n      })\n    },\n\n\n\n    watchActive(active) {\n      let file\n      let index = 0\n      while ((file = this.files[index])) {\n        index++\n        if (!file.fileObject) {\n          // 不是文件对象\n        } else if (active && !this.destroy) {\n          if (this.uploading >= this.thread || (this.uploading && !this.features.html5)) {\n            break\n          }\n          if (!file.active && !file.error && !file.success) {\n            this.update(file, { active: true })\n          }\n        } else {\n          if (file.active) {\n            this.update(file, { active: false })\n          }\n        }\n      }\n      if (this.uploading === 0) {\n        this.active = false\n      }\n    },\n\n\n    watchDrop(_el) {\n      let el = _el\n      if (!this.features.drop) {\n        return\n      }\n\n      // 移除挂载\n      if (this.dropElement) {\n        try {\n          document.removeEventListener('dragenter', this.onDragenter, false)\n          document.removeEventListener('dragleave', this.onDragleave, false)\n          document.removeEventListener('drop', this.onDocumentDrop, false)\n          this.dropElement.removeEventListener('dragover', this.onDragover, false)\n          this.dropElement.removeEventListener('drop', this.onDrop, false)\n        } catch (e) {\n        }\n      }\n\n      if (!el) {\n        el = false\n      } else if (typeof el === 'string') {\n        el = document.querySelector(el) || this.$root.$el.querySelector(el)\n      } else if (el === true) {\n        el = this.$parent.$el\n      }\n\n      this.dropElement = el\n\n      if (this.dropElement) {\n        document.addEventListener('dragenter', this.onDragenter, false)\n        document.addEventListener('dragleave', this.onDragleave, false)\n        document.addEventListener('drop', this.onDocumentDrop, false)\n        this.dropElement.addEventListener('dragover', this.onDragover, false)\n        this.dropElement.addEventListener('drop', this.onDrop, false)\n      }\n    },\n\n\n    onDragenter(e) {\n      e.preventDefault()\n      if (!this.dropActive) {\n        this.dropActive = true\n      }\n    },\n\n    onDragleave(e) {\n      e.preventDefault()\n      if (e.target.nodeName === 'HTML' || (e.screenX === 0 && e.screenY === 0 && !e.fromElement && e.offsetX <= 0)) {\n        this.dropActive = false\n      }\n    },\n\n    onDragover(e) {\n      e.preventDefault()\n    },\n\n    onDocumentDrop() {\n      this.dropActive = false\n    },\n\n    onDrop(e) {\n      e.preventDefault()\n      this.addDataTransfer(e.dataTransfer)\n    },\n  }\n}\n</script>\n","module.exports = require('./FileUpload.vue')\n"],"names":["createRequest","options","xhr","XMLHttpRequest","responseType","open","method","url","headers","keys","forEach","setRequestHeader","key","sendRequest","body","Promise","resolve","reject","onload","status","response","onerror","send","JSON","stringify","sendFormRequest","data","FormData","name","append","ChunkUploadHandler","file","chunks","start","end","chunkSize","fileSize","push","slice","maxRetries","progress","active","stopChunks","chunksUploading","abort","startChunking","promise","Object","assign","action","startBody","fileType","then","res","sessionId","session_id","end_offset","createChunks","catch","i","maxActiveChunks","uploadNextChunk","hasChunksToUpload","uploadChunk","chunksToUpload","length","finish","chunk","updateFileProgress","upload","addEventListener","evt","lengthComputable","Math","round","loaded","total","uploadBody","startOffset","blob","uploaded","retries","finishBody","parseInt","maxActive","type","size","completedProgress","chunksUploaded","uploadingProgress","reduce","min","filter","render","e","$destroy","$parent","addInputFile","target","constructor","$el","CHUNK_DEFAULT_OPTIONS","ChunkUploadDefaultHandler","String","Boolean","Number","multiple","Function","Array","value","input","document","createElement","window","files","webkitdirectory","directory","features","html5","ondrop","drop","maps","$nextTick","$forceUpdate","watchDrop","destroy","fileObject","error","success","undefined","watchActive","oldMaps","id","newFile","oldFile","emitFile","emitInput","_files","index","addIndex","isArray","addFiles","Blob","webkitRelativePath","relativePath","Element","el","putAction","postAction","timeout","random","toString","substr","emitFilter","maximum","clear","newFiles","concat","splice","replace","add","dataTransfer","items","item","getAsEntry","getAsFile","webkitGetAsEntry","getEntry","results","entry","path","isFile","isDirectory","dropDirectory","dirReader","createReader","readEntries","entries","id1","id2","file1","get","file2","index1","indexOf","index2","isPrevent","$emit","uploading","update","code","message","extensions","RegExp","split","map","trim","join","search","customAction","shouldUseChunkUpload","uploadPut","uploadHtml5","uploadHtml4","chunkEnabled","chunkOptions","handler","minSize","HandlerClass","querys","encodeURIComponent","queryString","uploadXhr","form","File","filename","_file","speedTime","speedLoaded","onprogress","speedTime2","Date","now","toFixed","interval","setInterval","complete","fn","responseText","contentType","getResponseHeader","parse","onabort","ontimeout","onKeydown","keyCode","preventDefault","iframe","src","setAttribute","appendChild","getResponseData","doc","contentWindow","err","contentDocument","innerHTML","removeEventListener","submit","parentNode","removeChild","thread","_el","dropElement","onDragenter","onDragleave","onDocumentDrop","onDragover","onDrop","querySelector","$root","dropActive","nodeName","screenX","screenY","fromElement","offsetX","addDataTransfer","require$$0"],"mappings":"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"}